{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newMovie","imgUrlCheck","imdbUrlCheck","pattern","chengeState","event","target","name","value","setState","checkForm","imgUrlPattern","exec","imdbUrlPattern","props","addFilm","clearForm","controlAddButton","length","this","onSubmit","preventDefault","required","type","placeholder","onChange","classNames","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f51d3e7d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  addFilm: (newMovie: Movie) => void\n};\n\ntype State = {\n  newMovie: Movie,\n  imgUrlCheck: boolean,\n  imdbUrlCheck: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    imgUrlCheck: false,\n    imdbUrlCheck: false,\n  };\n\n  // eslint-disable-next-line no-useless-escape\n  pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  chengeState = (event: React.ChangeEvent<HTMLInputElement> |\n  React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      newMovie: {\n        ...state.newMovie,\n        [name]: value,\n      },\n    }));\n  };\n\n  checkForm = () => {\n    const { imdbUrl, imgUrl } = this.state.newMovie;\n\n    const imgUrlPattern = this.pattern.exec(imgUrl);\n    const imdbUrlPattern = this.pattern.exec(imdbUrl);\n\n    if (!imgUrlPattern) {\n      this.setState((state) => (\n        {\n          imgUrlCheck: true,\n          newMovie: {\n            title: state.newMovie.title,\n            description: state.newMovie.description,\n            imgUrl: '',\n            imdbUrl: state.newMovie.imdbUrl,\n            imdbId: state.newMovie.imdbId,\n          },\n        }\n      ));\n\n      return;\n    }\n\n    if (!imdbUrlPattern) {\n      this.setState((state) => (\n        {\n          imgUrlCheck: false,\n          imdbUrlCheck: true,\n          newMovie: {\n            title: state.newMovie.title,\n            description: state.newMovie.description,\n            imgUrl: state.newMovie.imgUrl,\n            imdbUrl: '',\n            imdbId: state.newMovie.imdbId,\n          },\n        }\n      ));\n\n      return;\n    }\n\n    this.setState({\n      imdbUrlCheck: false,\n      imgUrlCheck: false,\n    });\n\n    this.props.addFilm(this.state.newMovie);\n    this.clearForm();\n  };\n\n  clearForm = () => {\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  controlAddButton = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    switch (true) {\n      case title.length < 1:\n      case description.length < 1:\n      case imgUrl.length < 1:\n      case imdbUrl.length < 1:\n      case imdbId.length < 1:\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    return (\n      <>\n        <h2\n          className=\"Title\"\n        >\n          Add Film\n        </h2>\n        <form\n          className=\"Form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n\n            this.checkForm();\n          }}\n        >\n\n          <input\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter Title\"\n            value={title}\n            onChange={this.chengeState}\n          />\n\n          <input\n            required\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Enter Description\"\n            value={description}\n            onChange={this.chengeState}\n          />\n\n          <input\n            required\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n            className={classNames('Form__input', { 'Form__input--error': this.state.imgUrlCheck })}\n            value={imgUrl}\n            onChange={this.chengeState}\n          />\n          {this.state.imgUrlCheck && (\n            <p className=\"Form__input--message-error\">Please enter a valid value</p>\n          )}\n\n          <input\n            required\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n            className={classNames('Form__input', { 'Form__input--error': this.state.imdbUrlCheck })}\n            value={imdbUrl}\n            onChange={this.chengeState}\n          />\n          {this.state.imdbUrlCheck && (\n            <p className=\"Form__input--message-error\">Please enter a valid value</p>\n          )}\n\n          <input\n            type=\"text\"\n            required\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.chengeState}\n          />\n\n          <button\n            type=\"submit\"\n            disabled={this.controlAddButton()}\n          >\n            Add\n          </button>\n\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => (\n      {\n        movies: [...state.movies, newMovie],\n      }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addFilm={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}